/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type CredentialType = "oauth" | "password";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Answers {
  answered_at: Generated<Timestamp | null>;
  id: Generated<string>;
  option_id: string | null;
  question_id: string | null;
  quiz_id: string | null;
  user_id: string | null;
}

export interface EmailTokens {
  expires_at: Timestamp;
  id: Generated<string>;
  token: string;
  used: Generated<boolean | null>;
  user_id: string | null;
}

export interface Migrations {
  executed_at: Generated<Timestamp | null>;
  name: string;
}

export interface Options {
  id: Generated<string>;
  is_correct: Generated<boolean | null>;
  question_id: string | null;
  text: string;
}

export interface Questions {
  id: Generated<string>;
  quiz_id: string | null;
  text: string;
}

export interface QuizResults {
  completed_at: Generated<Timestamp | null>;
  duration: number | null;
  id: Generated<string>;
  quiz_id: string | null;
  score: number;
  user_id: string | null;
}

export interface Quizzes {
  created_at: Generated<Timestamp | null>;
  created_by: string | null;
  description: string | null;
  id: Generated<string>;
  is_active: Generated<boolean | null>;
  scheduled_for: Timestamp | null;
  title: string;
}

export interface UserCredentials {
  created_at: Generated<Timestamp | null>;
  email: string;
  email_verified: Generated<boolean | null>;
  id: Generated<string>;
  password_hash: string | null;
  provider: string | null;
  provider_id: string | null;
  token_expires_at: Timestamp | null;
  type: Generated<CredentialType>;
  user_id: string;
  verification_token: string | null;
}

export interface Users {
  avatar_url: string | null;
  created_at: Generated<Timestamp | null>;
  id: Generated<string>;
  name: string;
  role: Generated<string>;
}

export interface DB {
  answers: Answers;
  email_tokens: EmailTokens;
  migrations: Migrations;
  options: Options;
  questions: Questions;
  quiz_results: QuizResults;
  quizzes: Quizzes;
  user_credentials: UserCredentials;
  users: Users;
}
